<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>space</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r120/three.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r120/three.min.js"></script>
    <script src='http://threejs.org/examples/js/controls/OrbitControls.js'></script>
    <style>
        body { margin: 0; overflow: hidden; }
        canvas { width: 100%; height: 100% }
    </style>
</head>
<body>
    <script>
        var scene = new THREE.Scene();

        var aspect = window.innerWidth / window.innerHeight;
        var camera = new THREE.PerspectiveCamera(85, aspect, 0.1, 1000);
        camera.position.set(0, 0, 50);

        var renderer = new THREE.WebGLRenderer({ antialias : true});
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        var imageLoader = new THREE.TextureLoader();
        imageLoader.load("img/univ3.jpg", data => {
            // 우주 배경
            var material_nuiv = new THREE.MeshBasicMaterial({
                map: data,
                side: THREE.BackSide
            })
            // 우주
            var geometry_nuiv = new THREE.SphereGeometry(400, 32, 32);
            mesh = new THREE.Mesh(geometry_nuiv, material_nuiv);
            scene.add(mesh)
        });

        // var seaColor = 0x002159;
        // scene.fog = new THREE.Fog(seaColor, 0.005, 2000);
        // scene.fog = new THREE.FogExp2(seaColor, 5);

        // var controls = new THREE.OrbitControls(camera, renderer.domElement);
        // controls.update();

        let i = 0;
        function render() {
            requestAnimationFrame( render );
            // controls.update();
            i += 0.003;
            camera.position.set( 30 * Math.sin(i), 10, 30 * Math.cos(i));
            camera.lookAt(scene.position);
            camera.updateProjectionMatrix();

            renderer.render( scene, camera );
        }
        render();
    </script>
</body>
</html>