<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>cube</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r120/three.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r120/three.min.js"></script>
    <script src='http://threejs.org/examples/js/controls/OrbitControls.js'></script>

    <style>
        body { margin: 0; }
        canvas { width: 100%; height: 100% }
    </style>
</head>
<body>
    <script>
        // scene 생성
        var scene = new THREE.Scene();

        // 카메라 종횡비 설정
        var aspect = window.innerWidth / window.innerHeight;
        // 카메라 설치
        var camera = new THREE.PerspectiveCamera(85, aspect, 0.1, 1000);
        camera.position.set(0, 0, 50);

        // 카메라 설명
        // var camera = new THREE.PerspectiveCemara(fov, aspect, near, far);
        // fov : 시야, aspect : 종횡비, near : 어디부터, far : 어디까지
        // fov를 통해 zoom in, zoom out 효과를 낼 수 있음. Ex. 100 -> 20 : zoom in

        // 화면 사이즈 설정
        var renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);

        // body에 넣기
        document.body.appendChild(renderer.domElement);

        // 이거 하면 3D 배경으로 보여짐 (grid 생성)
        var axes = new THREE.AxesHelper(50);
        scene.add(axes);
        var gridHelper = new THREE.GridHelper(100, 5);
        scene.add(gridHelper);

        // box 만들기
        var geometry = new THREE.BoxGeometry(20, 20, 20);
        // 재질(색깔) 설정
        var material = new THREE.MeshBasicMaterial({ color: 0xffff00 });
        // 만든 후 scene에 add
        var boxMesh = new THREE.Mesh(geometry, material);
        scene.add(boxMesh);

        // 조명
        var spotLight = new THREE.SpotLight( 0xffffff );
        spotLight.position.set(-35, 72, 80);
        scene.add(spotLight);

        // controls를 이용해 카메라 컨트롤 가능(다양하게 옵션 제공)
        var controls = new THREE.OrbitControls(camera, renderer.domElement);
        controls.update();

        function render() {
            requestAnimationFrame( render );
            controls.update();
            renderer.render( scene, camera );
        }

        render();
    </script>
</body>
</html>